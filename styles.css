/* fixes for Obsidian */

.setting-item.is-disabled {
    opacity: 0.3;
}

/* variables */

:root {
    --psk-sm: 1rem;
    --psk-xs: 0.5rem;
    --psk-2xs: 0.25rem;
}

#psk-gallery {
    --accent-bright: hsl(var(--accent-h) var(--accent-s) calc(var(--accent-l) + 20%));
    --subtle: hsl(0 0% 80%);
    --preview-size: 200px;
    --progress-height: 1rem;
    --progress-radius: var(--progress-height);
    --blur-radius: 6px;
}

.workspace-leaf-content[data-type="psk-view-pics-explorer"] {
    --accent-bright: hsl(var(--accent-h) var(--accent-s) calc(var(--accent-l) + 10%) / 0.8);
    --accent-dim: hsl(var(--accent-h) var(--accent-s) calc(var(--accent-l) - 5%) / 0.3);
    --subtle-bright: hsl(0 0% 50% / 0.8);
    --search-height: 2.5rem;
}

/* specifics */

.block-language-psk {
    padding: 1rem;
}

.block-language-psk table {
    /* overriding `.markdown-rendered table` */
    margin-block-start: 0;
    margin-block-end: 0;
}

img.psk-thumbnail {
    height: 120px;
    aspect-ratio: 3 / 2;
    object-fit: cover;
    border-radius: 5px;
    border: 2px solid lightblue;
}

#psk-gallery {
    background-color: hsla(0, 0%, 0%, 0.75);
    color: white;
    /* https://docs.obsidian.md/Reference/CSS+variables/Foundations/Layers
    `--layer-modal` is 50
    `--layer-notice` is 60
    */
    overflow: clip;
    z-index: var(--layer-modal);
}

#psk-gallery:focus {
    border: 3px solid var(--color-accent);
    border-radius: var(--radius-l);
}

.InfoBar {
    background-color: hsl(var(--accent-h) var(--accent-s) var(--accent-l) / 0.25);
    height: 25vh;
}

.ProgressBar {
    min-width: 0;
    max-width: 50vw;
    height: var(--progress-height);
    background-color: rgb(0 0 0 / 0.5);
    border-radius: var(--progress-radius);
}

.ProgressBar .ProgressMask {
    overflow: clip;
    border-radius: var(--progress-radius);
}

.ProgressBar .ProgressFill {
    background-color: var(--color-accent);
    border-radius: var(--progress-radius);
    /* Transition animation must be in sync with the gallery pictures, which currently use none. */
    /* transition: transform 0.1s ease; */
}

/* .SeekPreview {
    background-color: cyan;
} */

.SeekPreview .PreviewPicturePlaceholder {
    width: var(--preview-size);
    height: var(--preview-size);
    left: calc(var(--preview-size) / -2);
    bottom: var(--progress-height);
    /* background-color: magenta; */
}

.SeekPreview .PreviewPicture {
    width: 100%;
    height: 100%;
    bottom: 0.5rem;
    /* transform: translateY(-0.5rem); */
    overflow: clip;
    border: 6px solid hsl(var(--accent-h) var(--accent-s) calc(var(--accent-l) + 10%) / 0.8);
    border-radius: 0.5rem;
    box-shadow: 1px 1px 2px black;
}

.PreviewPicture .NumberBadge {
    background-color: rgb(0 0 0 / 0.65);
    color: white;
    font-size: x-large;
    font-weight: bold;
    padding: 1rem;
    width: 3rem;
    height: 3rem;
    border-radius: 3rem;
}

.SeekPreview .SeekBall {
    width: var(--progress-height);
    height: var(--progress-height);
    transform: translateX(-50%);
    background-color: white;
    border-radius: var(--progress-radius);
}

.ImageInfo {
    font-size: x-large;
    padding-block: 1rem;
}

.ImageInfoBasic {
    padding-block: 0.5rem;
    padding-inline: 1rem;
    background-color: rgba(0 0 0 / 0.25);
    border-radius: 0.25rem;
}

.ImageFormatBadge {
    padding-block: 0.25rem;
    padding-inline: 0.5rem;
    background-color: rgb(0 0 0 / 0.35);
    border-radius: 0.25rem;
    font-size: smaller;
    text-transform: uppercase;
}

.ImageZoom {
    color: var(--subtle);
    font-size: smaller;
}

.ImageZoom.active {
    color: var(--accent-bright);
    cursor: pointer;
}

.GalleryIconButton {
    color: var(--subtle);
}

.GalleryIconButton.enabled {
    color: var(--accent-bright);
}

.PicDescription {
    pointer-events: none;
    top: 40px;
    left: 40px;
    width: 300px;
    min-height: 100px;
    max-height: 400px;
    padding: 1rem;
    border-radius: 0.5rem;
    background-color: hsl(0 0% 0% / 0.4);
    box-shadow: 1px 1px 2px hsl(0 0% 0% / 0.6);
}

.PicDescription .Brief {
    font-size: xx-large;
    line-height: 2;
}

.PicDescription .Detail {
    font-size: x-large;
    color: hsl(0 0% 75%);
}

.PicDescription .NoDescription {
    font-size: larger;
    color: hsl(0 0% 75%);
}

.SearchBar {
    padding-block: 1rem;
}

.SearchBox {
    width: 50%;
    height: var(--search-height);
}

.SearchBox input {
    padding-inline-start: 0.75rem;
    padding-inline-end: var(--search-height);
}

.ClearSearch {
    width: var(--search-height);
    height: var(--search-height);
    cursor: pointer;
    opacity: 0.5;
    transition: opacity 0.5s ease-in;
}

.ClearSearch:hover {
    opacity: 1;
}

.SearchHitsInfo {
    padding-block: 0.75rem;
    padding-inline: 1.25rem;
    margin-block-end: 1rem;
    border-radius: 1rem;
    border: 1px solid var(--accent-bright);
    background-color: var(--accent-dim);
}

.SearchHitsInfo.ZeroHit {
    border: none;
    background-color: hsl(0 0% 35% / 0.15);
}

.SearchHitsInfo .Tip {
    margin-inline-start: 0.5rem;
}

.Paginator {
    padding-block: 1rem;
}

.RevealExcludedToggle {
    width: var(--search-height);
    height: var(--search-height);
    border-radius: 0.25rem;
}

.RevealExcludedToggle:hover {
    background-color: hsl(0 0% 30% / 0.3);
}

.HoverButtonGroup {
    height: 2rem;
    padding: 0.25rem;
}

.HoverButton {
    width: 1.5rem;
    height: 1.5rem;
    border-radius: 0.25rem;
    background-color: hsl(0 0% 5% / 0.8);
    opacity: 0.75;
    transition: opacity 0.2s ease-in;
}

.HoverButton:hover {
    opacity: 1;
}

.Thumbnail {
    border-width: 5px;
    border-style: solid;
    border-color: var(--subtle-bright);
    border-radius: 5px;
    overflow: clip;
}

.Thumbnail.LocalFile {
    border-color: var(--accent-bright);
}

/* "components" */

.showOnHover {
    opacity: 0;
    transition: opacity 0.5s ease-in;
}

.showOnHover:hover {
    opacity: 1;
}

.parent > .showOnParentHover {
    opacity: 0;
    transition: opacity 0.5s ease-in;
}

.parent:hover > .showOnParentHover {
    opacity: 1;
}

.iconButton {
    cursor: not-allowed;
    opacity: 0.5;
}

.iconButton.enabled {
    cursor: pointer;
    opacity: 1;
}

.iconToggle {
    cursor: pointer;
    opacity: 0.5;
    transition: opacity 0.2s ease-in;
}

.iconToggle.enabled {
    opacity: 1;
}

.inlineIcon {
    vertical-align: middle;
    margin-inline-end: 0.25rem;
}

/* Based on https://tailwindcss.com/docs/object-fit#containing-within */
.bgZebra {
    background-image: repeating-linear-gradient(-45deg, rgb(255 255 255 / 0.25) 0 1px, transparent 0 50%);
    background-size: 8px 8px;
}

.imageGrid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));
    gap: 0.5rem;
}

.imageGrid > .gridCell {
    aspect-ratio: 1 / 1;
    /* Note: the min-height or overflow rule is necessary to ensure the cell is a perfect square,
    o/w we get an extra 4px of height than width! */
    /* overflow: hidden; */
    min-height: 0;
}

.imageGrid img {
    width: 100%;
    aspect-ratio: 1 / 1;
    object-fit: cover;
}

.imageGrid-2 {
    display: grid;
    grid-template-columns: repeat(2, minmax(0, 1fr));
    gap: 0.5rem;
}

.imageGrid-2 img {
    width: 100%;
    aspect-ratio: 1 / 1;
    object-fit: cover;
}

.imageGrid-4 {
    display: grid;
    grid-template-columns: repeat(4, minmax(0, 1fr));
    gap: 0.5rem;
}

.imageGrid-4 img {
    width: 100%;
    aspect-ratio: 1 / 1;
    object-fit: cover;
}

.imageGrid-4 .selected {
    border: 1px solid lightblue;
}

.imageGrid-4 .caption {
    overflow: hidden;
    text-overflow: ellipsis;
    word-break: break-word;
    overflow-wrap: anywhere;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 3;
    line-clamp: 3;
}

/* utils */

.hidden {
    display: none !important;
}

.absolute {
    position: absolute;
}

.fixed {
    position: fixed;
}

.relative {
    position: relative;
}

.top-0 {
    top: 0;
}

.bottom-0 {
    bottom: 0;
}

.right-0 {
    right: 0;
}

.inset-0 {
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
}

.w-full {
    width: 100% !important;
}

.h-full {
    height: 100% !important;
}

.my-sm {
    margin-block: var(--psk-sm);
}

.my-xs {
    margin-block: var(--psk-xs);
}

.row {
    display: flex;
    flex-direction: row;
    align-items: center;
}

.row-spacing-sm {
    column-gap: var(--psk-sm);
}

.row-spacing-xs {
    column-gap: var(--psk-xs);
}

.row-spacing-2xs {
    column-gap: var(--psk-2xs);
}

.column {
    display: flex;
    flex-direction: column;
}

.column-spacing-sm {
    row-gap: var(--psk-sm);
}

.column-spacing-xs {
    row-gap: var(--psk-xs);
}

.column-spacing-2xs {
    row-gap: var(--psk-2xs);
}

.flex-center {
    display: flex;
    justify-content: center;
    align-items: center;
}

.flex-wrap {
    flex-wrap: wrap;
}

.overflow-hidden {
    overflow: hidden;
}

.object-contain {
    object-fit: contain;
}

.object-cover {
    object-fit: cover;
}

.cursor-grab {
    cursor: grab;
}

.cursor-grabbing {
    cursor: grabbing;
}

.bg-blur {
    backdrop-filter: blur(var(--blur-radius));
    -webkit-backdrop-filter: blur(var(--blur-radius));
}